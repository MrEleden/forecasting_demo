[project]
name = "forecasting-demo"
version = "0.1.0"
description = "ML Portfolio for time series forecasting across multiple domains"
authors = [
    {name = "Your Name", email = "you@example.com"}
]
license = "MIT"
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
    "mlflow>=2.0.0",
    "hydra-core>=1.3.0",
    "omegaconf>=2.3.0",
    "pandas>=1.5.0",
    "numpy>=1.21.0",
    "scikit-learn>=1.1.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "statsmodels>=0.13.0",
    "optuna>=3.0.0",
    "torch>=1.13.0",
    "pytorch-lightning>=2.0.0",
]

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 120
target-version = ["py39"]

[tool.ruff]
line-length = 120
target-version = "py39"
select = ["E", "W", "F", "I"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]
addopts = [
    "-v",
    "--strict-markers",
    "--tb=short",
    "--cov=src/ml_portfolio/data",
    "--cov=src/ml_portfolio/models",
    "--cov=src/ml_portfolio/pipelines",
    "--cov=src/ml_portfolio/training",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-branch",
]

[tool.coverage.run]
source = [
    "src/ml_portfolio/data",
    "src/ml_portfolio/models",
    "src/ml_portfolio/pipelines",
    "src/ml_portfolio/training"
]
omit = [
    "*/tests/*",
    "*/conftest.py",
    "*/__pycache__/*",
    "*/site-packages/*",
    "*/training/engine.py",
    "*/migrations/*",
    "*/venv/*",
    "*/.venv/*",
    "*/utils/*",
    "*/evaluation/benchmark.py",
    "*/models/statistical/arima.py",
    "*/models/statistical/prophet.py",
    "*/models/statistical/sarimax.py",
    "*/models/ensemble/*",
]

[tool.coverage.report]
fail_under = 36  # Current baseline: 36.23% for core modules (data, models, pipelines, training)
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
    "@abc.abstractmethod",
    "pass",
]

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"
