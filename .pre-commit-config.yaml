# Pre-commit hooks for ML Forecasting Portfolio
# Install: pip install pre-commit && pre-commit install

repos:
  # Black - Python code formatter
  - repo: https://github.com/psf/black
    rev: 25.9.0
    hooks:
      - id: black
        language_version: python3.11
        args: ['--line-length=120']

  # Ruff - Fast Python linter
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.14.1
    hooks:
      - id: ruff
        args: ['--fix', '--exit-non-zero-on-fix']
        exclude: '\.ipynb$'  # Notebooks have different import conventions

  # pycodestyle - PEP 8 style checker (via local)
  - repo: local
    hooks:
      - id: pycodestyle
        name: pycodestyle
        entry: pycodestyle
        language: system
        types: [python]
        args: ['--max-line-length=120', '--ignore=E203,W503']

  # Trailing whitespace and file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
        args: ['--unsafe']  # Allow custom YAML tags for Hydra
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-merge-conflict
      - id: mixed-line-ending

  # Markdown formatter (keeps front matter + tables consistent)
  - repo: https://github.com/executablebooks/mdformat
    rev: 0.7.17
    hooks:
      - id: mdformat
        additional_dependencies:
          - mdformat-gfm
          - mdformat-frontmatter

  # Jupyter notebook output cleaner - strips outputs and metadata
  - repo: https://github.com/kynan/nbstripout
    rev: 0.8.1
    hooks:
      - id: nbstripout
        args: ['--extra-keys', 'metadata.kernelspec metadata.language_info']

  # pytest with coverage - Optional coverage reporting (not enforced)
  # Focus on core implementation: data, models, pipelines, training
  # Note: engine.py is excluded from coverage (complex PyTorch training loops)
  # To enable enforcement, uncomment and set desired threshold
  # - repo: local
  #   hooks:
  #     - id: pytest-coverage
  #       name: pytest with coverage reporting
  #       entry: pytest
  #       language: system
  #       pass_filenames: false
  #       always_run: true
  #       args: [
  #         'tests/unit/', '-v',
  #         '--cov=src/ml_portfolio/data',
  #         '--cov=src/ml_portfolio/models',
  #         '--cov=src/ml_portfolio/pipelines',
  #         '--cov=src/ml_portfolio/training',
  #         '--cov-report=term-missing',
  #         # '--cov-fail-under=20'  # Uncomment to enforce threshold
  #       ]
  #       stages: [pre-commit]
