# Stacking Ensemble Configuration

model:
  _target_: ml_portfolio.models.ensemble.stacking.StackingForecaster

  # Base models (list of model configs)
  base_models:
    - name: prophet
      model:
        _target_: ml_portfolio.models.statistical.prophet.ProphetForecaster
        growth: linear
        seasonality_mode: additive

    - name: lightgbm
      model:
        _target_: ml_portfolio.models.statistical.lightgbm.LightGBMForecaster
        n_estimators: 100
        learning_rate: 0.1
        max_depth: 5

    - name: xgboost
      model:
        _target_: ml_portfolio.models.statistical.xgboost.XGBoostForecaster
        n_estimators: 100
        learning_rate: 0.1
        max_depth: 5

  # Meta-learner
  meta_model:
    _target_: sklearn.linear_model.Ridge
    alpha: 1.0

  # Options
  use_features: false  # Include original features in meta-learner
  cv_folds: 5  # For out-of-fold predictions

# Optuna hyperparameter search space
optuna:
  # Base model selection (categorical)
  base_model_combinations:
    - [prophet, lightgbm, xgboost]
    - [prophet, lightgbm, catboost]
    - [prophet, xgboost, catboost]
    - [lightgbm, xgboost, catboost]
    - [prophet, lightgbm, xgboost, catboost]

  # Meta-learner options
  meta_learner_options:
    - _target_: sklearn.linear_model.Ridge
      alpha_min: 0.1
      alpha_max: 10.0

    - _target_: sklearn.linear_model.Lasso
      alpha_min: 0.1
      alpha_max: 10.0

    - _target_: sklearn.ensemble.RandomForestRegressor
      n_estimators_min: 50
      n_estimators_max: 200

  # Feature usage
  use_features_options: [true, false]

  # CV folds
  cv_folds_min: 3
  cv_folds_max: 10

# Model metadata
metadata:
  family: ensemble
  type: stacking
  requires_base_models: true
  meta_learning: true
  interpretable: false
  good_for:
    - combining_diverse_models
    - maximizing_accuracy
    - heterogeneous_ensembles
